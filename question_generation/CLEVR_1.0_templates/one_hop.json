[
   {
      "constraints": [ ],
      "nodes": [
         {
            "inputs": [ ],
            "type": "scene"
         },
         {
            "inputs": [
               0
            ],
            "side_inputs": [
               "<Z>",
               "<C>",
               "<M>",
               "<S>"
            ],
            "type": "filter_unique"
         },
         {
            "inputs": [
               1
            ],
            "side_inputs": [
               "<R>",
               "<Z2>",
               "<C2>",
               "<M2>",
               "<S2>"
            ],
            "type": "relate_filter_count"
         }
      ],
      "params": [
         {
            "name": "<Z>",
            "type": "Size"
         },
         {
            "name": "<C>",
            "type": "Color"
         },
         {
            "name": "<M>",
            "type": "Material"
         },
         {
            "name": "<S>",
            "type": "Shape"
         },
         {
            "name": "<R>",
            "type": "Relation"
         },
         {
            "name": "<Z2>",
            "type": "Size"
         },
         {
            "name": "<C2>",
            "type": "Color"
         },
         {
            "name": "<M2>",
            "type": "Material"
         },
         {
            "name": "<S2>",
            "type": "Shape"
         }
      ],
      "query": " MATCH (i)~[:contains]~~<o<S>{<Z><C><M>}>,(i)~[:contains]~~<o2<S2>{<Z2><C2><M2>}>~~[<R>]~<o<S>{<Z><C><M>}> RETURN count(o2) AS counto2",
      "query2": [
         "MATCH (i)~[:contains]~~<o<S>{<Z><C><M>}>,",
         "(i)~[:contains]~~<o2<S2>{<Z2><C2><M2>}>~~[<R>]~<o>",
         "RETURN count(o2) as count"
      ],
      "text": [
         "What number of <Z2> <C2> <M2> <S2>s are <R> the <Z> <C> <M> <S>?",
         "How many <Z2> <C2> <M2> <S2>s are <R> the <Z> <C> <M> <S>?",
         "There is a <Z> <C> <M> <S>; how many <Z2> <C2> <M2> <S2>s are <R> it?",
         "There is a <Z> <C> <M> <S>; what number of <Z2> <C2> <M2> <S2>s are <R> it?"
      ]
   },
   {
      "constraints": [ ],
      "nodes": [
         {
            "inputs": [ ],
            "type": "scene"
         },
         {
            "inputs": [
               0
            ],
            "side_inputs": [
               "<Z>",
               "<C>",
               "<M>",
               "<S>"
            ],
            "type": "filter_unique"
         },
         {
            "inputs": [
               1
            ],
            "side_inputs": [
               "<R>",
               "<Z2>",
               "<C2>",
               "<M2>",
               "<S2>"
            ],
            "type": "relate_filter_exist"
         }
      ],
      "params": [
         {
            "name": "<Z>",
            "type": "Size"
         },
         {
            "name": "<C>",
            "type": "Color"
         },
         {
            "name": "<M>",
            "type": "Material"
         },
         {
            "name": "<S>",
            "type": "Shape"
         },
         {
            "name": "<R>",
            "type": "Relation"
         },
         {
            "name": "<Z2>",
            "type": "Size"
         },
         {
            "name": "<C2>",
            "type": "Color"
         },
         {
            "name": "<M2>",
            "type": "Material"
         },
         {
            "name": "<S2>",
            "type": "Shape"
         }
      ],
      "query": " MATCH (i)~[:contains]~~<o<S>{<Z><C><M>}>,(i)~[:contains]~~<o2<S2>{<Z2><C2><M2>}>~~[<R>]~<o<S>{<Z><C><M>}> WITH o2 LIMIT 1 RETURN count(o2)>0 AS exist",
      "query2": [
         "MATCH (i)~[:contains]~~<o<S>{<Z><C><M>}>,",
         "(i)~[:contains]~~<o2<S2>{<Z2><C2><M2>}>~~[<R>]~<o>",
         "WITH o2 LIMIT 1",
         "RETURN count(o2)>0 as exist"
      ],
      "text": [
         "Are there any <Z2> <C2> <M2> <S2>s <R> the <Z> <C> <M> <S>?",
         "There is a <Z> <C> <M> <S>; are there any <Z2> <C2> <M2> <S2>s <R> it?"
      ]
   },
   {
      "constraints": [
         {
            "params": [
               "<Z2>"
            ],
            "type": "NULL"
         }
      ],
      "nodes": [
         {
            "inputs": [ ],
            "type": "scene"
         },
         {
            "inputs": [
               0
            ],
            "side_inputs": [
               "<Z>",
               "<C>",
               "<M>",
               "<S>"
            ],
            "type": "filter_unique"
         },
         {
            "inputs": [
               1
            ],
            "side_inputs": [
               "<R>",
               "<Z2>",
               "<C2>",
               "<M2>",
               "<S2>"
            ],
            "type": "relate_filter_unique"
         },
         {
            "inputs": [
               2
            ],
            "type": "query_size"
         }
      ],
      "params": [
         {
            "name": "<Z>",
            "type": "Size"
         },
         {
            "name": "<C>",
            "type": "Color"
         },
         {
            "name": "<M>",
            "type": "Material"
         },
         {
            "name": "<S>",
            "type": "Shape"
         },
         {
            "name": "<R>",
            "type": "Relation"
         },
         {
            "name": "<Z2>",
            "type": "Size"
         },
         {
            "name": "<C2>",
            "type": "Color"
         },
         {
            "name": "<M2>",
            "type": "Material"
         },
         {
            "name": "<S2>",
            "type": "Shape"
         }
      ],
      "query": " MATCH (i)~[:contains]~~<o<S>{<Z><C><M>}>,(i)~[:contains]~~<o2<S2>{<Z2><C2><M2>}>~~[<R>]~<o<S>{<Z><C><M>}> RETURN o2.size AS size",
      "query2": [
         "MATCH (i)~[:contains]~~<o<S>{<Z><C><M>}>,",
         "(i)~[:contains]~~<o2<S2>{<Z2><C2><M2>}>~~[<R>]~<o>",
         "RETURN o2.size as size"
      ],
      "text": [
         "What size is the <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>?",
         "What is the size of the <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>?",
         "How big is the <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>?",
         "There is a <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>; what size is it?",
         "There is a <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>; how big is it?",
         "There is a <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>; what is its size?"
      ]
   },
   {
      "constraints": [
         {
            "params": [
               "<C2>"
            ],
            "type": "NULL"
         }
      ],
      "nodes": [
         {
            "inputs": [ ],
            "type": "scene"
         },
         {
            "inputs": [
               0
            ],
            "side_inputs": [
               "<Z>",
               "<C>",
               "<M>",
               "<S>"
            ],
            "type": "filter_unique"
         },
         {
            "inputs": [
               1
            ],
            "side_inputs": [
               "<R>",
               "<Z2>",
               "<C2>",
               "<M2>",
               "<S2>"
            ],
            "type": "relate_filter_unique"
         },
         {
            "inputs": [
               2
            ],
            "type": "query_color"
         }
      ],
      "params": [
         {
            "name": "<Z>",
            "type": "Size"
         },
         {
            "name": "<C>",
            "type": "Color"
         },
         {
            "name": "<M>",
            "type": "Material"
         },
         {
            "name": "<S>",
            "type": "Shape"
         },
         {
            "name": "<R>",
            "type": "Relation"
         },
         {
            "name": "<Z2>",
            "type": "Size"
         },
         {
            "name": "<C2>",
            "type": "Color"
         },
         {
            "name": "<M2>",
            "type": "Material"
         },
         {
            "name": "<S2>",
            "type": "Shape"
         }
      ],
      "query": " MATCH (i)~[:contains]~~<o<S>{<Z><C><M>}>,(i)~[:contains]~~<o2<S2>{<Z2><C2><M2>}>~~[<R>]~<o<S>{<Z><C><M>}> RETURN o2.color AS color",
      "query2": [
         "MATCH (i)~[:contains]~~<o<S>{<Z><C><M>}>,",
         "(i)~[:contains]~~<o2<S2>{<Z2><C2><M2>}>~~[<R>]~<o>",
         "RETURN o2.color as color"
      ],
      "text": [
         "What color is the <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>?",
         "What is the color of the <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>?",
         "The <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S> is what color?",
         "There is a <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>; what color is it?",
         "There is a <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>; what is its color?"
      ]
   },
   {
      "constraints": [
         {
            "params": [
               "<M2>"
            ],
            "type": "NULL"
         }
      ],
      "nodes": [
         {
            "inputs": [ ],
            "type": "scene"
         },
         {
            "inputs": [
               0
            ],
            "side_inputs": [
               "<Z>",
               "<C>",
               "<M>",
               "<S>"
            ],
            "type": "filter_unique"
         },
         {
            "inputs": [
               1
            ],
            "side_inputs": [
               "<R>",
               "<Z2>",
               "<C2>",
               "<M2>",
               "<S2>"
            ],
            "type": "relate_filter_unique"
         },
         {
            "inputs": [
               2
            ],
            "type": "query_material"
         }
      ],
      "params": [
         {
            "name": "<Z>",
            "type": "Size"
         },
         {
            "name": "<C>",
            "type": "Color"
         },
         {
            "name": "<M>",
            "type": "Material"
         },
         {
            "name": "<S>",
            "type": "Shape"
         },
         {
            "name": "<R>",
            "type": "Relation"
         },
         {
            "name": "<Z2>",
            "type": "Size"
         },
         {
            "name": "<C2>",
            "type": "Color"
         },
         {
            "name": "<M2>",
            "type": "Material"
         },
         {
            "name": "<S2>",
            "type": "Shape"
         }
      ],
      "query": " MATCH (i)~[:contains]~~<o<S>{<Z><C><M>}>,(i)~[:contains]~~<o2<S2>{<Z2><C2><M2>}>~~[<R>]~<o<S>{<Z><C><M>}> RETURN o2.material AS material",
      "query2": [
         "MATCH (i)~[:contains]~~<o<S>{<Z><C><M>}>,",
         "(i)~[:contains]~~<o2<S2>{<Z2><C2><M2>}>~~[<R>]~<o>",
         "RETURN o2.material as material"
      ],
      "text": [
         "What is the material of the <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>?",
         "What material is the <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>?",
         "What is the <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S> made of?",
         "There is a <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>; what is its material?",
         "There is a <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>; what material is it?",
         "There is a <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>; what is it made of?"
      ]
   },
   {
      "constraints": [
         {
            "params": [
               "<S2>"
            ],
            "type": "NULL"
         }
      ],
      "nodes": [
         {
            "inputs": [ ],
            "type": "scene"
         },
         {
            "inputs": [
               0
            ],
            "side_inputs": [
               "<Z>",
               "<C>",
               "<M>",
               "<S>"
            ],
            "type": "filter_unique"
         },
         {
            "inputs": [
               1
            ],
            "side_inputs": [
               "<R>",
               "<Z2>",
               "<C2>",
               "<M2>",
               "<S2>"
            ],
            "type": "relate_filter_unique"
         },
         {
            "inputs": [
               2
            ],
            "type": "query_shape"
         }
      ],
      "params": [
         {
            "name": "<Z>",
            "type": "Size"
         },
         {
            "name": "<C>",
            "type": "Color"
         },
         {
            "name": "<M>",
            "type": "Material"
         },
         {
            "name": "<S>",
            "type": "Shape"
         },
         {
            "name": "<R>",
            "type": "Relation"
         },
         {
            "name": "<Z2>",
            "type": "Size"
         },
         {
            "name": "<C2>",
            "type": "Color"
         },
         {
            "name": "<M2>",
            "type": "Material"
         },
         {
            "name": "<S2>",
            "type": "Shape"
         }
      ],
      "query": " MATCH (i)~[:contains]~~<o<S>{<Z><C><M>}>,(i)~[:contains]~~<o2<S2>{<Z2><C2><M2>}>~~[<R>]~<o<S>{<Z><C><M>}> RETURN labels(o2)[0] AS shape",
      "query2": [
         "MATCH (i)~[:contains]~~<o<S>{<Z><C><M>}>,",
         "(i)~[:contains]~~<o2<S2>{<Z2><C2><M2>}>~~[<R>]~<o>",
         "RETURN labels(o2)[0] as shape"
      ],
      "text": [
         "What shape is the <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>?",
         "What is the shape of the <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>?",
         "The <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S> has what shape?",
         "There is a <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>; what is its shape?",
         "There is a <Z2> <C2> <M2> <S2> [that is] <R> the <Z> <C> <M> <S>; what shape is it?"
      ]
   }
]
